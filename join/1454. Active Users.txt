#  1454. Active Users
#  Medium
#  301
#  30
#  Add to List

#Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content#

#  SQL Schema
#  Table: Accounts
#  +---------------+---------+
#  | Column Name   | Type    |
#  +---------------+---------+
#  | id            | int     |
#  | name          | varchar |
#  +---------------+---------+
#  id is the primary key for this table.
#  This table contains the account id and the user name of each account.
#    Table: Logins
#  +---------------+---------+
#  | Column Name   | Type    |
#  +---------------+---------+
#  | id            | int     |
#  | login_date    | date    |
#  +---------------+---------+
#  There is no primary key for this table, it may contain duplicates.
#  This table contains the account id of the user who logged in and the login date. A user may log in multiple times in the day.
#    Active users are those who logged in to their accounts for five or more consecutive days.
#  Write an SQL query to find the id and the name of active users.
#  Return the result table ordered by id.
#  The query result format is in the following example.
#    Example 1:
#  Input: 
#  Accounts table:
#  +----+----------+
#  | id | name     |
#  +----+----------+
#  | 1  | Winston  |
#  | 7  | Jonathan |
#  +----+----------+
#  Logins table:
#  +----+------------+
#  | id | login_date |
#  +----+------------+
#  | 7  | 2020-05-30 |
#  | 1  | 2020-05-30 |
#  | 7  | 2020-05-31 |
#  | 7  | 2020-06-01 |
#  | 7  | 2020-06-02 |
#  | 7  | 2020-06-02 |
#  | 7  | 2020-06-03 |
#  | 1  | 2020-06-07 |
#  | 7  | 2020-06-10 |
#  +----+------------+
#  Output: 
#  +----+----------+
#  | id | name     |
#  +----+----------+
#  | 7  | Jonathan |
#  +----+----------+
#  Explanation: 
#  User Winston with id = 1 logged in 2 times only in 2 different days, so, Winston is not an active user.
#  User Jonathan with id = 7 logged in 7 times in 6 different days, five of them were consecutive days, so, Jonathan is an active user.
#    Follow up: Could you write a general solution if the active users are those who logged in to their accounts for n or more consecutive days?

#Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution#
#SOLUTION 1: WINDOW FUNCTION
WITH cte AS(
SELECT 
    id
    ,DATEDIFF(login_date,(SELECT MIN(login_date) FROM Logins))+1-ROW_NUMBER()OVER(PARTITION BY id ORDER BY login_date) AS difdate
FROM 
(SELECT DISTINCT id,login_date FROM Logins) AS Logins
)

SELECT DISTINCT
    cte.id
    ,Accounts.name
FROM 
    cte
    ,Accounts
WHERE cte.id=Accounts.id
GROUP BY cte.id,cte.difdate
HAVING COUNT(*)>=5
ORDER BY id

#SOLUTION 2: JOIN
WITH Logins_distinct AS(
    SELECT DISTINCT id,login_date FROM Logins
)
, cte AS(
    SELECT 
        t1.id
        ,t1.login_date AS loga
        ,t2.login_date AS logb
    FROM
        Logins_distinct AS t1
        ,Logins_distinct AS t2
    WHERE t1.id=t2.id
    AND DATEDIFF(t1.login_date,t2.login_date) BETWEEN 0 AND 4
)

SELECT DISTINCT cte.id,Accounts.name
FROM 
    cte
    ,Accounts
WHERE cte.id=Accounts.id
GROUP BY id,loga
HAVING COUNT(*)=5