#  1398. Customers Who Bought Products A and B but Not C
#  Medium
#  187
#  9
#  Add to List

#Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content##Content#

#  SQL Schema
#  Table: Customers
#  +---------------------+---------+
#  | Column Name         | Type    |
#  +---------------------+---------+
#  | customer_id         | int     |
#  | customer_name       | varchar |
#  +---------------------+---------+
#  customer_id is the primary key for this table.
#  customer_name is the name of the customer.
#    Table: Orders
#  +---------------+---------+
#  | Column Name   | Type    |
#  +---------------+---------+
#  | order_id      | int     |
#  | customer_id   | int     |
#  | product_name  | varchar |
#  +---------------+---------+
#  order_id is the primary key for this table.
#  customer_id is the id of the customer who bought the product "product_name".
#    Write an SQL query to report the customer_id and customer_name of customers who bought products "A", "B" but did not buy the product "C" since we want to recommend them to purchase this product.
#  Return the result table ordered by customer_id.
#  The query result format is in the following example.
#    Example 1:
#  Input: 
#  Customers table:
#  +-------------+---------------+
#  | customer_id | customer_name |
#  +-------------+---------------+
#  | 1           | Daniel        |
#  | 2           | Diana         |
#  | 3           | Elizabeth     |
#  | 4           | Jhon          |
#  +-------------+---------------+
#  Orders table:
#  +------------+--------------+---------------+
#  | order_id   | customer_id  | product_name  |
#  +------------+--------------+---------------+
#  | 10         |     1        |     A         |
#  | 20         |     1        |     B         |
#  | 30         |     1        |     D         |
#  | 40         |     1        |     C         |
#  | 50         |     2        |     A         |
#  | 60         |     3        |     A         |
#  | 70         |     3        |     B         |
#  | 80         |     3        |     D         |
#  | 90         |     4        |     C         |
#  +------------+--------------+---------------+
#  Output: 
#  +-------------+---------------+
#  | customer_id | customer_name |
#  +-------------+---------------+
#  | 3           | Elizabeth     |
#  +-------------+---------------+
#  Explanation: Only the customer_id with id 3 bought the product A and B but not the product C.

#Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution##Solution#

SOLUTION 1
SELECT DISTINCT Orders.customer_id , Customers.customer_name 
FROM 
     Orders 
    ,Customers 
WHERE Orders.customer_id = Customers.customer_id 
AND EXISTS(
    SELECT 1 FROM Orders AS t1
    WHERE t1.customer_id  = Orders.customer_id
    AND t1.product_name  = 'A'
)
AND EXISTS(
    SELECT 1 FROM Orders AS t1
    WHERE t1.customer_id  = Orders.customer_id
    AND t1.product_name  = 'B'
)
AND NOT EXISTS(
    SELECT 1 FROM Orders AS t1
    WHERE t1.customer_id  = Orders.customer_id
    AND t1.product_name  = 'C'
)

SOLUTION 2

WITH sub AS(
    SELECT customer_id FROM Orders 
    GROUP BY customer_id
    HAVING SUM(CASE WHEN product_name = 'A' THEN 1 ELSE 0 END)>0
    AND SUM(CASE WHEN product_name = 'B' THEN 1 ELSE 0 END)>0
    AND SUM(CASE WHEN product_name = 'C' THEN 1 ELSE 0 END)=0
)

SELECT customer_id, customer_name FROM Customers 
WHERE EXISTS(
SELECT 1 FROM sub
WHERE sub.customer_id=Customers.customer_id
)